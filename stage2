#!/bin/ash

usb="$(df | grep /media/ | head -n1 | awk \{print\ \$6\})"
#dsk="$(df | grep /media/ | head -n1 | awk \{print\ \$1\} | sed s%1\$%%)"

if=$(ip a|awk -F:\  \{print\ \$2\}|sed /^$/d|grep -v lo|head -n1)
#if={if:-eth0}

cat > answers <<EOF
# Example answer file for setup-alpine script
# If you don't want to use a certain option, then comment it out

# Use US layout with US variant
KEYMAPOPTS="us us"

# Set hostname to alpine-test
#HOSTNAMEOPTS="-n ovpn-stage"

# Contents of /etc/network/interfaces
INTERFACESOPTS="auto lo
iface lo inet loopback

auto $if
iface $if inet dhcp"
#static
#        hostname ovpn-stage
#        address 10.118.133.133
#        netmask 255.255.252.0
#        gateway 10.118.132.1"

# Search domain of example.com, Google public nameserver
DNSOPTS="-d local  8.8.4.4  8.8.8.8"
#DNSOPTS="-d krit.pro 10.118.131.100 10.118.145.13"

# Set timezone to UTC
TIMEZONEOPTS="-z Europe/Samara"

# set http/ftp proxy
PROXYOPTS="none"

# Add a random mirror
APKREPOSOPTS="http://mirror.yandex.ru/mirrors/alpine/v3.13/main
#http://mirror.yandex.ru/mirrors/alpine/v3.13/community
#http://mirror.yandex.ru/mirrors/alpine/edge/main
#http://mirror.yandex.ru/mirrors/alpine/edge/community
#http://mirror.yandex.ru/mirrors/alpine/edge/testing
"

# Install Openssh
SSHDOPTS="-c openssh"

# Use openntpd
NTPOPTS="-c chrony"

# Use /dev/sda as a data disk
DISKOPTS="-m data none"

# Setup in /media/sdb1
LBUOPTS="$usb"
APKCACHEOPTS="$usb/cache"
EOF

setup-alpine -f answers
setup-lbu -q
setup-apkcache "$usb/cache"

sed -i s%^#PermitRootLogin\ prohibit-password\$%PermitRootLogin\ yes% /etc/ssh/sshd_config || exit 1
service sshd restart

[ -d xmrig ] && pkill xmrig && sleep 1 && rm -rf xmrig
sed -i 's%^#\(.*/edge/community\)%\1%' /etc/apk/repositories
apk --no-cache -U upgrade && \
      apk --no-cache add \
        git \
        cmake \
        libuv-dev \
        build-base \
        hwloc-dev \
        openssl-dev \
        screen && \
      git clone https://github.com/xmrig/xmrig && \
      cd xmrig && \
      sed -i '/DonateLevel/s%= 1;$%= 0;%' ./src/donate.h
      mkdir build && \
      cmake -DCMAKE_BUILD_TYPE=Release . && \
      make && \
      cd && \
      lbu add ~/xmrig && \
      echo vm.nr_hugepages=256 > /etc/sysctl.d/huge.conf && \
      sysctl -p && \
      lbu add /etc/sysctl.d/huge.conf && \
      cat > /bin/run <<EOF
#!/bin/ash
screen -d -m /root/xmrig/xmrig \\
  -O \$HOSTNAME:x --rig-id=\$HOSTNAME \\
  -o rig0.rigss.ru:7773 \\
  -o rig1.rigss.ru:7773 \\
  -o rig3.rigss.ru:7773 \\
  -o rig2.rigss.ru:7773 \\
  -o rig4.rigss.ru:7773 \\
  -o rig5.rigss.ru:7773
EOF
chmod +x /bin/run && \
lbu add /bin/run && \
lbu ci && \
service local stop
rc-update add local default

cat > /etc/local.d/run.start <<EOF
#!/bin/ash
exec run
EOF
chmod +x /etc/local.d/run.start
service local start

echo 'Stage #2: All done!'
